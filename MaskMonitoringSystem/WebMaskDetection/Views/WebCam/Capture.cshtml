@model IEnumerable< WebMaskDetection.Models.LocationSetting>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <title>SkyNet Mask Monitoring System</title>
    <link rel="shortcut icon" href="~/images/st.png">
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link href="~/css/styles.css" rel="stylesheet" />
    <style type="text/css">
        body {
    font-family: Helvetica, sans-serif;
}

h2, h3 {
    margin-top: 0;
}

form {
    margin-top: 15px;
}

form > input {
                margin-right: 15px;
            }


        #buttonhide {
            background: transparent;
            border: none !important;
            font-size: 0;
        }

        body {
            background-color: lightblue;
        }

            body::after {
                content: "";
                background: url('/images/Skynet-6A-Copyright-Airbus.jfif');
                opacity: 0.5;
                top: 0;
                left: 0;
                bottom: 0;
                right: 0;
                position: absolute;
                z-index: -1;
            }
    </style>

</head>
<body>
    <!-- Navigation-->
    <nav class="navbar navbar-expand-lg bg-secondary text-uppercase fixed-top" id="mainNav">
        <div class="container">
            <a class="navbar-brand js-scroll-trigger" href="#page-top" style="color:white"><h1>SkyTech Mask Monitoring System</h1></a>
            <button class="navbar-toggler navbar-toggler-right text-uppercase font-weight-bold bg-primary text-white rounded" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                Menu
                <i class="fas fa-bars"></i>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item mx-0 mx-lg-1" style="font-size:medium; color:white">Email: ai0403skynet@gmail.com</li>
                </ul>
            </div>
        </div>
    </nav>
    <br /><br /><br /><br /><br /><br /><br /><br />
    <div class="col-md-12">
        <div class="col-md-2"></div>
        <div class="col-md-4">
            <div class="col-md-11">
                <div class="panel panel-default">
                    <div class="panel-heading" style="font-size:medium">Camera</div>
                    <div class="panel-body" style="font-size:small">
                        <div id="my_camera"></div>
                        <!-- A button for taking snaps -->
                        <form>
                            <select name="locationAndIndex" id="locationAndIndex">
                                @foreach (var item in Model)
                                {
                                <option value="@item.locationIndex;@item.Location"> @Html.DisplayFor(modelItem => item.Location)</option>
                                }
                                </select> <br />
                            <input type="button" value="Start" onClick="start_snapping()" style="background-color:limegreen">
                            <input type="button" value="Stop" onClick="stop_snapping()" style="background-color:limegreen">
                        </form>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="col-md-11">
                <div>

                    <div class="panel-body">


                    </div>
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-2">    </div>
    <!-- First, include the Webcam.js JavaScript Library -->
    <script src="~/webcamjs/webcam.js"></script>
    <!-- Configure a few settings and attach camera -->
    <script language="JavaScript">
        Webcam.set({
            width: 320,
            height: 240,
            image_format: 'jpeg',
            jpeg_quality: 90
        });
        Webcam.attach('#my_camera');
    </script>

    <!-- Code to handle taking the snapshot and displaying it locally -->
    <script language="JavaScript">
        var timer = null;
        var count = 1;
        function take_snapshot() {
            alert("start taking snapshot" + count);
            count = count + 1;

            // take snapshot and get image data
            Webcam.snap(function (data_uri) {
                // display results in page
                //document.getElementById('results').innerHTML =
                //    '<img src="' +
                //    data_uri +
                //    '"/>';

                Webcam.upload(data_uri,
                    '/WebCam/Capture',
                    //function (code, text) {
                    //    alert(code + text);
                    //}
                );
            });
        }
        function start_snapping() {
            if (!timer) {


                take_snapshot();
                timer = setInterval(take_snapshot, 1000 *@ViewData["webCamInterval"]);
            }
        }
        function dummyFunction() {

            alert("start taking snapshot" + 1);
            count = count + 1;
        }

        function stop_snapping() {
            if (timer) {
                clearTimeout(timer);
                timer = null;
                alert("stop taking snapshot");
            }
        }
    </script>

</body>
</html>

